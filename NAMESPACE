# Generated by roxygen2: do not edit by hand

S3method("[",s2_xptr)
S3method("[[",s2_xptr)
S3method(as.data.frame,s2_latlng)
S3method(as.data.frame,s2_point)
S3method(as.matrix,s2_latlng)
S3method(as.matrix,s2_point)
S3method(as_s2_geography,character)
S3method(as_s2_geography,logical)
S3method(as_s2_geography,s2_geography)
S3method(as_s2_geography,wk_wkb)
S3method(as_s2_latlng,matrix)
S3method(as_s2_latlng,numeric)
S3method(as_s2_latlng,s2_latlng)
S3method(as_s2_latlng,s2_point)
S3method(as_s2_latlng,wk_wkb)
S3method(as_s2_point,matrix)
S3method(as_s2_point,numeric)
S3method(as_s2_point,s2_latlng)
S3method(as_s2_point,s2_point)
S3method(as_wkb,s2_geography)
S3method(as_wkb,s2_latlng)
S3method(as_wkb,s2_point)
S3method(as_wkt,s2_geography)
S3method(as_wkt,s2_latlng)
S3method(as_wkt,s2_point)
S3method(c,s2_xptr)
S3method(format,s2_geography)
S3method(format,s2_latlng)
S3method(format,s2_point)
S3method(print,s2_xptr)
S3method(rep,s2_xptr)
S3method(rep_len,s2_xptr)
export(as_s2_geography)
export(as_s2_latlng)
export(as_s2_point)
export(new_s2_xptr)
export(s2_area)
export(s2_asbinary)
export(s2_astext)
export(s2_boundary)
export(s2_centroid)
export(s2_centroid_agg)
export(s2_closestpoint)
export(s2_contains)
export(s2_coveredby)
export(s2_covers)
export(s2_difference)
export(s2_dimension)
export(s2_disjoint)
export(s2_distance)
export(s2_dwithin)
export(s2_earth_radius_meters)
export(s2_equals)
export(s2_geogfromtext)
export(s2_geogfromwkb)
export(s2_geogpoint)
export(s2_get_snaplevel)
export(s2_intersection)
export(s2_intersects)
export(s2_intersectsbox)
export(s2_iscollection)
export(s2_isempty)
export(s2_length)
export(s2_makeline)
export(s2_makepolygon)
export(s2_makepolygonoriented)
export(s2_maxdistance)
export(s2_nearestfeature)
export(s2_numpoints)
export(s2_perimeter)
export(s2_set_snaplevel)
export(s2_snaptogrid)
export(s2_symdifference)
export(s2_touches)
export(s2_union)
export(s2_union_agg)
export(s2_within)
export(s2_x)
export(s2_y)
export(s2data_cities)
export(s2data_countries)
export(s2data_timezones)
export(validate_s2_xptr)
importFrom(Rcpp,sourceCpp)
importFrom(wk,as_wkb)
importFrom(wk,as_wkt)
useDynLib(s2, .registration = TRUE)
